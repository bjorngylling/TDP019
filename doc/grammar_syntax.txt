non_zero_digit ::= "1"..."9"

integer ::= non_zero_digit digit* | "0"

float ::= [ integer ] . digit+

number ::= integer | float

return_stmt ::= "return" expression

assignment_expression ::= identifier "=" expression

arguments ::= "(" [ [expression , ]* expression ]? ")"

function_call ::= identifier arguments

function_def ::= identifier arguments "{" statement_list return_stmt? "}"

expression ::= "false" |
				       "true" |
				       a_expr |
				       number |
				       string |
				       indentifier |
				       function_call |
				       comparison

a_expr ::= m_expr |
           a_expr "+" m_expr |
           a_expr "-" m_expr

m_expr ::= u_expr |
           m_expr "*" u_expr |
           m_expr "/" u_expr

u_expr ::= number |
           "-" u_expr |
           "+" u_expr

statement ::= assignment_expression |
							function_call |
							if_statement |
							while_statement |
							function_def

statement_terminator ::= "\n" | ";"

statement_list ::= [ statement statement_terminator ]+

if_statement ::= "if" "(" expression ")" "{" statement_list "}"

while_statement ::= "while" "(" expression ")" "{" statement_list "}"

