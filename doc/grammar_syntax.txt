digits ::= digit+

integer ::= digits

float ::= [ digits ] . digits

number ::= integer | float

return_stmt ::= "return" expression

assignment_expression ::= identifier "=" expression

arguments ::= "(" [ [expression , ]* expression ]? ")"

function_call ::= identifier arguments

function_def ::= identifier arguments "{" statement_list return_stmt? "}"

expression ::= assignment_expression |
				       comparison

comparison ::= a_expr comp_operator a_expr |
                a_expr

a_expr ::= m_expr |
           a_expr "+" m_expr |
           a_expr "-" m_expr

m_expr ::= u_expr |
           m_expr "*" u_expr |
           m_expr "/" u_expr

u_expr ::= primary |
           "-" primary |
           "+" primary

primary ::= boolean |
            number |
            string |
            indentifier |
            function_call

statement ::= assignment_expression |
							function_call |
							if_statement |
							while_statement |
							function_def

statement_terminator ::= "\n" | ";"

statement_list ::= [ statement statement_terminator ]+

if_statement ::= "if" "(" expression ")" "{" statement_list "}"

while_statement ::= "while" "(" expression ")" "{" statement_list "}"

